// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using eventos_ger.Model;

#nullable disable

namespace eventos_ger.Migrations
{
    [DbContext(typeof(Ger_Evento_Bd))]
    partial class Ger_Evento_BdModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OrganizadorId")
                        .HasColumnType("integer");

                    b.Property<string>("data")
                        .HasColumnType("text");

                    b.Property<string>("descricao")
                        .HasColumnType("text");

                    b.Property<string>("horario")
                        .HasColumnType("text");

                    b.Property<int>("id_local")
                        .HasColumnType("integer");

                    b.Property<int>("id_organizador")
                        .HasColumnType("integer");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizadorId");

                    b.HasIndex("id_local");

                    b.ToTable("Eventos", (string)null);
                });

            modelBuilder.Entity("eventos_ger.Model.AssociacaoEventoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("idEvento")
                        .HasColumnType("integer");

                    b.Property<int>("idPessoa")
                        .HasColumnType("integer");

                    b.Property<string>("tipo_pessoa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("idEvento");

                    b.HasIndex("idPessoa");

                    b.ToTable("Associacoes", (string)null);
                });

            modelBuilder.Entity("eventos_ger.Model.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<int>("Numero")
                        .HasColumnType("integer");

                    b.Property<string>("UF")
                        .HasColumnType("text");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Locais", (string)null);
                });

            modelBuilder.Entity("eventos_ger.Model.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("biografia")
                        .HasColumnType("text");

                    b.Property<string>("contato")
                        .HasColumnType("text");

                    b.Property<string>("cpf")
                        .HasColumnType("text");

                    b.Property<string>("especialidade")
                        .HasColumnType("text");

                    b.Property<int>("id_usuario")
                        .HasColumnType("integer");

                    b.Property<DateOnly?>("nascimento")
                        .HasColumnType("date");

                    b.Property<string>("nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("id_usuario")
                        .IsUnique();

                    b.ToTable("Pessoas", (string)null);
                });

            modelBuilder.Entity("eventos_ger.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("login")
                        .HasColumnType("text");

                    b.Property<string>("senha")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Evento", b =>
                {
                    b.HasOne("eventos_ger.Model.Pessoa", "Organizador")
                        .WithMany()
                        .HasForeignKey("OrganizadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eventos_ger.Model.Local", "Local")
                        .WithMany()
                        .HasForeignKey("id_local")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Local");

                    b.Navigation("Organizador");
                });

            modelBuilder.Entity("eventos_ger.Model.AssociacaoEventoPessoa", b =>
                {
                    b.HasOne("Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("idEvento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eventos_ger.Model.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("idPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("eventos_ger.Model.Pessoa", b =>
                {
                    b.HasOne("eventos_ger.Model.Usuario", "Usuario")
                        .WithOne("Pessoa")
                        .HasForeignKey("eventos_ger.Model.Pessoa", "id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("eventos_ger.Model.Usuario", b =>
                {
                    b.Navigation("Pessoa")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
